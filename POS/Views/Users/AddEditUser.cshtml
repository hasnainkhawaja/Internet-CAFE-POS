@model POS.Models.UsersModel
@{
    ViewBag.Title = "AddEditUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //Layout = "";
        
}




<div class="content container-fluid">
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
           @using (Html.BeginForm("AddEditUserSave", "Users", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <h3 class="page-title">Add/Edit Store</h3>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

               @Html.LabelFor(model => model.userName, (string)@ViewBag.CustomText)
                <div class="row divErrorStore hide">
                    <div class="col-md-12">
                        <div class="text-danger">
                            <div class="divError"><b>    User name already exists!!!</b></div>
                                
                            </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>
                                User Name
                            </label>

                            @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.userName, new { @class = "form-control" })



                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>
                                First Name
                            </label>
                            @Html.TextBoxFor(model => model.firstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })





                        </div>
                    </div>
                </div>

               
                 <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>
                                Last Name
                            </label>
                            @Html.TextBoxFor(model => model.lastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })





                        </div>
                    </div>
                </div>
               
               
                 <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>
                                Employee Code
                            </label>
                            @Html.TextBoxFor(model => model.employeeCode, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.employeeCode, "", new { @class = "text-danger" })





                        </div>
                    </div>
                </div>
               
          
               
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>
                                Employee Gender
                            </label>

                            @Html.DropDownListFor(m => m.employeeGender, new SelectList(Enum.GetValues(typeof(Gender))),
         "-- Select --", new { @class = "form-control" })


                        </div>
                    </div>
                </div>
               
                 
                 <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>
                                Employee Email
                            </label>
                            @Html.TextBoxFor(model => model.employeeEmail, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.employeeEmail, "", new { @class = "text-danger" })





                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>
                                Status
                            </label>
                            @Html.CheckBoxFor(m => m.active, new { @class = "chkactive" })




                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="row">
                        <div class="col-sm-12 text-center m-t-20">
                            <a href="@Url.Action("ShowGrid","Users")" class="btn btn-primary">
                                Cancel
                            </a>
                            <button type="submit" class="btn btn-primary divSaveCancel">Save &amp; update</button>
                        </div>
                    </div>
                </div>

                @Html.Hidden("hdnemployeeID", Model.employeeid, new { @class = "hdnemployeeID" })

            }
        </div>
    </div>
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}


<script>



    jQuery(function () {

        jQuery('.chkactive').change(function()
        {

            jQuery('#terminationDate').val('');
            if (jQuery(this).is(":checked")) {

                jQuery('.divterminationDate').attr('style', 'display:none');

            }
            else {
                jQuery('.divterminationDate').removeAttr('style');
            }


        });


        jQuery('#userName').blur(function ()
        {
            var _userName = jQuery(this).val();
            var _employeeid = jQuery('.hdnemployeeID').val();
            var _employeeEmail = jQuery('#employeeEmail').val();
            ValidateUserName(_userName, _employeeid, _employeeEmail);
        });

        jQuery('#employeeEmail').blur(function () {
            var _employeeEmail = jQuery(this).val();
            var _employeeid = jQuery('.hdnemployeeID').val();
            var _userName = jQuery('#userName').val();
            ValidateUserName(_userName, _employeeid, _employeeEmail);
        });


    });



    function ValidateUserName(userName, employeeid,employeeEmail) {
        var url = '@Url.Content("~/")' + "Users/ValidateUserName";


        data = { userName: userName, employeeid: employeeid, employeeEmail: employeeEmail};
        jQuery.ajax({
            type: 'GET',
            url: url,
            data: data,
            success: function (data) {
                if (data != '')
                {
                    jQuery('.divError').html(data);
                    jQuery('.divErrorStore').removeClass('hide');
                    jQuery('.divSaveCancel').hide();
                }
                else
                {
                    jQuery('.divErrorStore').addClass('hide');
                    jQuery('.divSaveCancel').show();
                }


                //jQuery('#myModalLabelUser').text("VIEW USER");

            }
        });

    }


</script>